{
  "project": {
    "name": "Classificateur d'Humour de Commits",
    "version": "1.0.0",
    "description": "Classificateur d'humour pour messages de commit basé sur EuroBERT-210m optimisé avec Optuna",
    "author": "Assistant IA",
    "license": "MIT",
    "repository": "https://huggingface.co/LBerthalon/eurobert-commit-humor"
  },
  "model": {
    "name": "eurobert-commit-humor",
    "base_model": "EuroBERT-210m",
    "optimization": "Optuna",
    "huggingface_repo": "LBerthalon/eurobert-commit-humor",
    "local_path": "eurobert_full",
    "performance": {
      "global_accuracy": 0.853,
      "funny_accuracy": 0.829,
      "optimal_threshold": 0.35
    },
    "architecture": {
      "technique": "LoRA (Low-Rank Adaptation)",
      "task": "Classification binaire",
      "classes": ["neutral", "funny"]
    }
  },
  "requirements": {
    "python": ">=3.8",
    "torch": ">=1.9.0",
    "transformers": ">=4.20.0",
    "huggingface_hub": ">=0.10.0",
    "numpy": ">=1.21.0",
    "tqdm": ">=4.60.0"
  },
  "installation": {
    "auto_install_script": "install.py",
    "test_script": "test_installation.py",
    "quick_start_script": "quick_start.py",
    "requirements_file": "requirements.txt"
  },
  "scripts": {
    "main_classifier": "commit_humor_classifier.py",
    "json_processor": "process_commits_json.py",
    "installer": "install.py",
    "tester": "test_installation.py",
    "deployer": "deploy.py",
    "quick_start": "quick_start.py"
  },
  "features": {
    "real_time_classification": true,
    "json_batch_processing": true,
    "auto_dependency_installation": true,
    "cpu_gpu_support": true,
    "interactive_mode": true,
    "batch_mode": true,
    "file_monitoring": true,
    "statistics_generation": true
  },
  "deployment": {
    "package_script": "deploy.py",
    "output_directory": "deploy",
    "archive_format": "zip",
    "portable_package": true
  },
  "usage_examples": {
    "simple_classification": "python commit_humor_classifier.py 'Fix bug in authentication'",
    "interactive_mode": "python commit_humor_classifier.py --interactive",
    "json_processing": "python process_commits_json.py commits.json",
    "batch_processing": "python process_commits_json.py commits.json --output results.json",
    "file_monitoring": "python process_commits_json.py --watch commits_dir/"
  },
  "performance": {
    "inference_time": {
      "cpu": "~200-500ms",
      "gpu": "~50-100ms"
    },
    "memory_usage": {
      "model_size": "~800MB",
      "runtime_memory": "~1-2GB"
    },
    "accuracy_metrics": {
      "precision": 0.853,
      "recall": 0.829,
      "f1_score": 0.841
    }
  },
  "supported_formats": {
    "input": {
      "text": "Messages de commit en texte brut",
      "json": "Fichiers JSON avec structure commits",
      "interactive": "Saisie interactive en ligne de commande"
    },
    "output": {
      "console": "Affichage dans la console",
      "json": "Sauvegarde en format JSON",
      "statistics": "Rapports statistiques détaillés"
    }
  },
  "integration": {
    "git_hooks": {
      "pre_commit": "Vérification avant commit",
      "post_commit": "Analyse après commit"
    },
    "ci_cd": {
      "github_actions": "Intégration GitHub Actions",
      "gitlab_ci": "Intégration GitLab CI",
      "jenkins": "Intégration Jenkins"
    },
    "apis": {
      "rest": "Endpoints REST pour classification",
      "webhooks": "Déclenchement via webhooks"
    }
  },
  "troubleshooting": {
    "common_issues": {
      "cuda_not_available": "Installer PyTorch avec support CUDA",
      "model_download_failed": "Vérifier la connexion internet et l'espace disque",
      "memory_error": "Utiliser le mode CPU ou augmenter la mémoire",
      "dependency_conflict": "Utiliser un environnement virtuel"
    },
    "debug_commands": {
      "test_installation": "python test_installation.py --verbose",
      "check_dependencies": "python install.py --check-only",
      "force_cpu": "python commit_humor_classifier.py --device cpu"
    }
  }
}